{
  "rbv_api.sendHttpGet": {
    "scope": "javascript",
    "prefix": "rbv_api.sendHttpGet",
    "body": "rbv_api.sendHttpGet(url,headers,charset,retryParams);",
    "description": "Purpose\nSends HTTP GET requests to the specified URL and returns the HTTP response body.\n\nParameters\nurl: URL for the GET request\nheaders: Optional. A String of name-value pairs specifying the HTTP Headers to be sent in the request.\ncharset: Optional. Preferred encoding scheme for the HTTP response. Default value is UTF-8.\nretryParams: Optional. A JSON object that Includes the following mandatory retry options for trigger.\n\tnumRetries — Number of retries allowed for a trigger. The maximum number of retries must not exceed 3.\n\tretryInterval — Interval (ms) between two subsequent retries. The maximum retry timeout value (Retry Interval * Number of retries) can be configured using MaxHttpRetryTimeoutInMins shared.property. Default value of MaxHttpRetryTimeoutInMins is 1 min.\n\tstatusCodes — HTTP Response codes on which retry should happen. It can be a comma separated values of status codes as well as a range of status codes. For example, 302-400,500.\n\nReturn value\nHTTP response"
  },
  "rbv_api.sendHttpPost": {
    "scope": "javascript",
    "prefix": "rbv_api.sendHttpPost",
    "body": "rbv_api.sendHttpPost(url, params, headers, chunked, retryParams);",
    "description": "Purpose\nSends multipart HTTP POST requests to the specified URL and returns the body of the HTTP response.\n\nParameters\nurl: A URL containing POST request.\nparams: An array of POST parameters in name/value pairs.\nheaders: An optional array of HTTP headers in name value pairs.\nchunked: If set to true or omitted, HTTP POST \"chunked\" parameter is used.\nretryParams: AN optional JSON object that includes the following mandatory retry options for trigger.\n\tnumRetries — Number of retries allowed for a trigger. The maximum number of retries must not exceed 3.\n\tretryInterval — Interval (ms) between two subsequent retries. The maximum retry timeout value (Retry Interval * Number of retries) can be configured using MaxHttpRetryTimeoutInMins shared.property. Default value of MaxHttpRetryTimeoutInMins is 1 min.\n\tstatusCodes — HTTP Response codes on which retry should happen. It can be a comma separated values of status codes as well as a range of status codes. For example, 302-400,500.\n\nReturn value\nBody of HTTP response"
  },
  "rbv_api.sendJSONRequest": {
    "scope": "javascript",
    "prefix": "rbv_api.sendJSONRequest",
    "body": "rbv_api.sendJSONRequest(url, data, method, contentType, username, password, headers, retryParams);",
    "description": "Purpose\nSends a JSON request to the specified URL and returns the HTTP response body.\n\nParameters\nurl: URL to send an HTTP request\ndata: Text string or a JSON object to send as a body of the request\nmethod:HTTP method, one of GET (default), POST, PUT or DELETE\ncontentType: MIME content type of data. For example: application/json; charset=UTF-8 (default)\nusername: Login name for BASIC authentication, by default null\npassword: Password for BASIC authentication, by default null\nheaders: Optional array of HTTP headers in name/value pairs, by default null\nretryParams: Optional JSON object that includes the following mandatory retry options for trigger.\n\tnumRetries — Number of retries allowed for a trigger. The maximum number of retries must not exceed 3.\n\tretryInterval — Interval (ms) between two subsequent retries. The maximum retry timeout value (Retry Interval * Number of retries) can be configured using MaxHttpRetryTimeoutInMins shared.property. Default value of MaxHttpRetryTimeoutInMins is 1 min.\n\tstatusCodes — HTTP Response codes on which retry should happen. It can be a comma separated values of status codes as well as a range of status codes. For example, 302-400,500.\n\nReturn value\nBody of HTTP response"
  },
  "rbv_api.getHTTPCookie": {
    "scope": "javascript",
    "prefix": "rbv_api.getHTTPCookie",
    "body": "rbv_api.getHTTPCookie(name);",
    "description": "Purpose\nReturns the value of an HTTP cookie sent to the server during a user interface-based update operation.\n\nParameters\nname: The name of the HTTP cookie.\n\nReturn value\nThe value of the HTTP cookie or Null."
  },
  "rbv_api.getHTTPParameter": {
    "scope": "javascript",
    "prefix": "rbv_api.getHTTPParameter",
    "body": "rbv_api.getHTTPParameter(name);",
    "description": "Purpose\nThis method returns the value of an HTTP parameter sent to the server during a UI-based update operation from an object field or a custom HTML component.\n\nParameters\nname: Name of input HTML box of a UI form HTML element\n\nReturn value\nHTTP parameter or null"
  },
  "rbv_api.sendHttpRequest": {
    "scope": "javascript",
    "prefix": "rbv_api.sendHttpRequest",
    "body": "rbv_api.sendHttpRequest(url, method, headers, params, body, options);",
    "description": "Purpose\nPlatform server-side API to provide end-users the ability to invoke RESTful web services. This API will be available for triggers and formula.\n\nParameters\nurl: The REST Service URL. This function argument is mandatory.\nmethod: The HTTP method. This function argument is mandatory. The POST, GET, PUT, and DELETE HTTP Methods are supported.\nheaders: The JSON object with key-value pairs to be forwarded as HTTP Request headers.\nparams: The JSON object with key-value pairs, wherein, each entry denotes HTTP Request parameter name and parameter value.\nbody: The request payload as a serialized string literal.\noptions: The JSON object with additional optional arguments as properties.\n\tuserName - On Platform server side, while establishing HTTP connection to RESTful Service host, Platform supports HTTP Basic Authentication. You must pass the user-name details as this property value.\n\tpassword - On Platform server side, while establishing HTTP connection to RESTful Service host, Platform supports HTTP Basic Authentication. You must pass password as this property value.\n\thttpReadTimeout - This property configures socket read timeout for the HTTP connection in milliseconds. The default value is 2 minutes. However, this can be configured to a maximum of 8 minutes.\n\tdebug - This property logs debug messages (tenant specific) on Platform server-side, while relaying service request and response.\n\tnumRetries - This property sets the number of retries allowed for a trigger. The maximum number of retries must not exceed 3.\n\tretryInterval - This property sets the interval (ms) between two subsequent retries. The maximum retry timeout value (Retry Interval * Number of retries) can be configured using MaxHttpRetryTimeoutInMins shared.property. Default value of MaxHttpRetryTimeoutInMins is 1 min.\n\tstatusCodes -This property mentions the HTTP Response codes on which retry should happen. It can be a comma separated values of status codes as well as a range of status codes. For example, 302-400,500.\n\nReturn value\nHTTP response"
  },
  "rbv_api.invokeSystemRESTV2": {
    "scope": "javascript",
    "prefix": "rbv_api.invokeSystemRESTV2",
    "body": "rbv_api.invokeSystemRESTV2(relativeUrl, data, method, contentType, headers, retryParams);",
    "description": "Purpose\nSends a JSON request to the specified RESTV2 resource and returns the HTTP response body. This method doesn’t require any credentials as it is invoking internal system RESTV2 methods. This method allows API-Key/JWT based authentication. Users can pass the API-Key/JWT token as header when required to invoke RESTV2 methods using another user’s context for the same tenant. This API allows the RESTV2 endpoints which are added to the shared property - WhiteListForServerSideRESTV2.\n\nParameters\nrelativeUrl: Relative URL to invoke RESTV2 method. For Example: /meta/roles\ndata: Text string or a JSON object to send as a body of the request\nmethod: HTTP method, one of GET (default), POST, PUT or DELETE\ncontentType: MIME content type of data. For example: application/json; charset=UTF-8 (default)\nheaders: Optional HTTP headers in name-value pairs, by default null. For Example: {\"Api-Key\": \"95as018c-63cc-3addff-a715-a5044e6a85f3-41011-42551\"}\nretryParams: Optional JSON object that includes the following mandatory retry options for trigger.\n\tnumRetries — Number of retries allowed for a trigger. The maximum number of retries must not exceed 3.\n\tretryInterval — Interval (ms) between two subsequent retries. The maximum retry timeout value (Retry Interval * Number of retries) can be configured using MaxHttpRetryTimeoutInMins shared.property. Default value of MaxHttpRetryTimeoutInMins is 1 min.\n\tstatusCodes — HTTP Response codes on which retry should happen. It can be a comma separated values of status codes as well as a range of status codes. For example, 302-400,500.\n\nReturn value\nBody of HTTP response"
  },
}